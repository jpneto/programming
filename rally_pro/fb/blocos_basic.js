// CONTADOR
// ********

Blockly.Blocks ['basic_initcounter'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(330);
        this.appendDummyInput().appendTitle('Inicializa contador com valor zero');
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setOutput(false, null);
        this.setTooltip('Inicializa o contador a zero.');
    }
};

Blockly.JavaScript ['basic_initcounter'] = function(block) {
  var code = 'var contador = 0;\n';
  return code;
};



Blockly.Blocks ['basic_incrcounter'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(330);
        this.appendDummyInput().appendTitle('Incrementa contador numa unidade');
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Incrementa o contador numa unidade.');
    }
};

Blockly.JavaScript ['basic_incrcounter'] = function(block) {
    var code = 'contador++;';
    return code;
};



Blockly.Blocks ['basic_dupcounter'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(330);
        this.appendDummyInput().appendTitle('Duplica contador');
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Duplica o contador.');
    }
};

Blockly.JavaScript ['basic_dupcounter'] = function(block) {
    var code = 'contador = 2 * contador;';
    return code;
};



Blockly.Blocks ['basic_addcounter'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(330);
        this.appendValueInput('valor')
            .setCheck('Number')
            .appendTitle('Adiciona ao contador');
        this.setInputsInline(true);
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Adiciona ao contador o valor fornecido.');
    }
};

Blockly.JavaScript ['basic_addcounter'] = function(block) {
    var value_valor = Blockly.JavaScript.valueToCode(this, 'valor', Blockly.JavaScript.ORDER_ATOMIC);
    var code = 'contador+='+value_valor+';';
    return code;
};



Blockly.Blocks ['basic_retcounter'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(330);
        this.appendDummyInput().appendTitle('O valor do contador');
        this.setOutput(true, 'Number');
        this.setTooltip('Devolve o valor do contador.');
    }
};

Blockly.JavaScript ['basic_retcounter'] = function(block) {
    var code = 'contador';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};



Blockly.Blocks ['basic_showcounter'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(330);
        this.appendDummyInput().appendTitle('Imprimir contador');
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Imprime o valor do contador.');
    }
};

Blockly.JavaScript ['basic_showcounter'] = function(block) {
    var code = 'window.alert(contador);';
    return code;
};



// ACUMULADOR
// **********

Blockly.Blocks ['basic_initaccum'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(350);
        this.appendDummyInput().appendTitle('Inicializa acumulador a zero');
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setOutput(false, null);
        this.setTooltip('Inicializa o acumulador a zero.');
    }
};

Blockly.JavaScript ['basic_initaccum'] = function(block) {
  var code = 'var acumulador = 0;';
  return code;
};



Blockly.Blocks ['basic_retaccum'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(350);
        this.appendDummyInput('valor').appendTitle('O valor do acumulador');
        this.setOutput(true, 'Number');
        this.setTooltip('Devolve o valor do acumulador.');
    }
};

Blockly.JavaScript ['basic_retaccum'] = function(block) {
	 var code = 'acumulador';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};




Blockly.Blocks ['basic_showaccum'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(350);
        this.appendDummyInput().appendTitle('Imprimir acumulador');
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Imprime o valor do acumulador.');
    }
};

Blockly.JavaScript ['basic_showaccum'] = function(block) {
    var code = 'window.alert(acumulador);';
    return code;
};



Blockly.Blocks ['basic_incraccum'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(350);
        this.appendDummyInput().appendTitle('Incrementa acumulador numa unidade');
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Incrementa o acumulador numa unidade.');
    }
};

Blockly.JavaScript ['basic_incraccum'] = function(block) {
  var code = 'acumulador++;';
  return code;
};



Blockly.Blocks ['basic_addaccum'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(350);
        this.appendValueInput('valor')
            .setCheck('Number')
            .appendTitle('Adiciona ao acumulador');
        this.setInputsInline(true);
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Adiciona ao acumulador o valor fornecido.');
    }
};

Blockly.JavaScript ['basic_addaccum'] = function(block) {
    var value_valor = Blockly.JavaScript.valueToCode(this, 'valor', Blockly.JavaScript.ORDER_ATOMIC);
    var code = 'acumulador+='+value_valor+';';
    return code;
};



Blockly.Blocks ['basic_mulaccum'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(350);
        this.appendValueInput('valor')
            .setCheck('Number')
            .appendTitle('Multiplica acumulador por');
        this.setInputsInline(true);
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Multiplica o acumulador pelo valor fornecido.');
    }
};

Blockly.JavaScript ['basic_mulaccum'] = function(block) {
    var value_valor = Blockly.JavaScript.valueToCode(this, 'valor', Blockly.JavaScript.ORDER_ATOMIC);
    var code = 'acumulador*='+value_valor+';';
    return code;
};



Blockly.Blocks ['basic_dupaccum'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(350);
        this.appendDummyInput().appendTitle('Duplica acumulador');
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Duplica o acumulador.');
    }
};

Blockly.JavaScript ['basic_dupaccum'] = function(block) {
    var code = 'acumulador *= 2;';
    return code;
};



Blockly.Blocks ['basic_tripaccum'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(350);
        this.appendDummyInput().appendTitle('Triplica acumulador');
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Triplica o acumulador.');
    }
};

Blockly.JavaScript ['basic_tripaccum'] = function(block) {
    var code = 'acumulador *= 3;';
    return code;
};



Blockly.Blocks ['basic_add3accum'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(350);
        this.appendDummyInput().appendTitle('Soma três ao acumulador');
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Soma três ao acumulador.');
    }
};

Blockly.JavaScript ['basic_add3accum'] = function(block) {
    var code = 'acumulador += 3;';
    return code;
};



Blockly.Blocks ['basic_add7accum'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(350);
        this.appendDummyInput().appendTitle('Soma sete ao acumulador');
        this.setOutput(false, null);
        this.setPreviousStatement(true);
        this.setNextStatement(true);
        this.setTooltip('Soma sete ao acumulador.');
    }
};

Blockly.JavaScript ['basic_add7accum'] = function(block) {
    var code = 'acumulador += 7;';
    return code;
};



// COORDENADAS
// ***********

Blockly.Blocks ['basic_retposiniX'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(300);
        this.appendDummyInput().appendTitle('coordenada X posição inicial');
        this.setOutput(true, 'Number');
        this.setTooltip('Devolve a coordenada X da posição inicial.');
    }
};

Blockly.JavaScript ['basic_retposiniX'] = function(block) {
    var code = '3';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};



Blockly.Blocks ['basic_retposiniY'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(300);
        this.appendDummyInput().appendTitle('coordenada Y posição inicial');
        this.setOutput(true, 'Number');
        this.setTooltip('Devolve a coordenada Y da posição inicial.');
    }
};

Blockly.JavaScript ['basic_retposiniY'] = function(block) {
    var code = '2';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};



Blockly.Blocks ['basic_retposfimX'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(300);
        this.appendDummyInput().appendTitle('coordenada X posição final');
        this.setOutput(true, 'Number');
        this.setTooltip('Devolve a coordenada X da posição final.');
    }
};

Blockly.JavaScript ['basic_retposfimX'] = function(block) {
    var code = '27';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};



Blockly.Blocks ['basic_retposfimY'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(300);
        this.appendDummyInput().appendTitle('coordenada Y posição final');
        this.setOutput(true, 'Number');
        this.setTooltip('Devolve a coordenada Y da posição final.');
    }
};

Blockly.JavaScript ['basic_retposfimY'] = function(block) {
    var code = '14';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};





// LISTA DE VALORES 1
// ******************

Blockly.Blocks ['lista_numeros_1'] = {
    category: 'Lists',
    helpUrl: null,
    init: function() {
        this.setColour(210);
        this.appendDummyInput().appendTitle('Lista de valores');
        this.setOutput(true, 'Array');
        this.setTooltip('Devolve a lista de valores.');
    }
};

Blockly.JavaScript ['lista_numeros_1'] = function() {
    var code = '[669086146, 155707936, 413663780, 648702319, 185135663, 594305866, 483985321, 130411716, 683571397, 877430686, 559074293, 420288650, 173087135, 659414619, 135549368, 455596693, 454573763, 107567274, 743867355, 446807468, 289221300, 117140481, 730316187, 959660900, 550274495, 626102074, 946846103, 272067047, 909509655, 663604030, 371185656, 248747957, 457832715, 277086022, 293353219, 983562969, 960299791, 422769800, 372361957, 436192720, 643940351, 462385229, 729437885, 241275961, 918627203, 290868656, 651286224, 988508697, 631776141, 607755509, 538592736, 279882695, 968116355, 731365782, 287766138, 63806058, 959530367, 101915164, 574273901, 936046322, 377608711, 789222828, 685957965, 505803016, 514774514, 47984874, 891333565, 861761510, 707370096, 276684590, 108035268, 148352245, 654616313, 885675737, 609427166, 136717478, 614779599, 695323015, 612219715, 105817610, 989401285, 856999251, 103808416, 343950637, 274101087, 655441046, 945588648, 429740493, 733709424, 197917780, 348134014, 412701081, 753521417, 167191065, 558417666, 651759327, 444329783, 576798180, 69050774, 836275471, 833491312, 184779703, 434754580, 893115010, 438916247, 376990810, 617425149, 219529563, 263445807, 825956410, 826030675, 495707949, 786292643, 154459141, 903145766, 312434908, 501843392, 628285389, 700369102, 611757664, 831771295, 530944338, 179074781, 649075068, 507140118, 620511890, 89405387, 385754403, 140092985, 930545031, 55451236, 581372806, 308370364, 34951331, 945821231, 934707248, 836967469, 16368722, 552972240, 448028242, 654422746, 146720418, 136873532, 558072929, 887947519, 956205083, 387316712, 334487762, 265672215, 92906356, 58018993, 332061826, 506342876, 182547479, 229106721, 256064879, 288787880, 777106509, 32957927, 631595851, 723134074, 704209843, 593968359, 406404135, 462858590, 622918393, 798323564, 224211901, 975090667, 571705654, 218563193, 258792794, 301934310, 726742245, 35290685, 194231045, 895726720, 644306852, 189620625, 107091917, 277148343, 758773514, 765201564, 364893852, 607342669, 683456522, 896614081, 398490563, 748259265, 373800907, 205232499, 647744095, 252985224, 658397401, 6097481, 318462803, 988599934, 349366828, 232153120, 736054438, 892117100, 444176322, 973093048, 237384937, 510534665, 911011354, 523622687, 930972280, 679240481, 111809045, 366004527, 648208225, 475080950, 433277201, 853669180, 878092737, 163647592, 798072080, 426642783, 768769462, 477379696, 787364662, 494382452, 492246696, 617804259, 292348280, 497426723, 635770846, 762260166, 267838426, 393349508, 753988926, 103702795, 552537063, 560478900, 394906129, 377952353, 811264229, 331777860, 640787021, 329412601, 313989051, 539389474, 440706972, 813841833, 118026236, 98064551, 367455513, 226677905, 907676574, 726440956, 242400923, 969212365, 148021807, 5441378, 364154931, 710972116, 200524069, 476886811, 273372626, 459547504, 975078226, 897752328, 869492058, 291835776, 144352999, 443239793, 213267439, 403448506, 611102214, 190690967, 664319883, 597171096, 797657128, 540864894, 862590208, 244103902, 997415448, 675731055, 409885559, 497924394, 926985896, 513022124, 821363820, 825431746, 850627525, 41745790, 276780575, 971963470, 187888125, 689076632, 684021804, 307582119, 755415838, 197824169, 21424312, 452044729, 931607569, 334812727, 458449284, 566692480, 80109744, 908953047, 586799421, 985795257, 861314009, 876052620, 340932241, 630626911, 663370085, 536266425, 153322761, 295767898, 629449956, 515388536, 810929544, 704453259, 491648495, 311105158, 482122738, 831742406, 70997913, 544145358, 845034215, 981867373, 676307716, 664369040, 805197229, 444149162, 88474383, 511291950, 668571692, 106583368, 487870253, 192663699, 932214034, 241620015, 824573265, 328030784, 63669271, 479902586, 266673140, 470292279, 757488026, 945490680, 571950315, 221942714, 125505914, 175834372, 656719202, 710971550, 123290777, 508202705, 578157228, 830481241, 708404746, 524096998, 119903099, 499075758, 210992404, 361420641, 831414403, 997620999, 283666304, 387956166, 933579614, 425591338, 207050512, 256053075, 807646077, 80893907, 46614878, 824144195, 556290449, 921697171, 271464268, 81971174, 372696868, 936576078, 864512322, 24295513, 249570269, 995787050, 686759129, 10707448, 288514880, 864275697, 975306631, 593239604, 134832305, 638770012, 518872200, 192413637, 666000962, 970594899, 827998459, 798584603, 599484073, 345135087, 791721514, 20546643, 378210602, 72200167, 635305406, 411959697, 123314982, 27960593, 961289635, 529662742, 302121014, 122640076, 854420648, 664410317, 308587090, 626656860, 391006177, 878708150, 501685802, 488053980, 646795132, 219211426, 843657953, 8909503, 804680279, 147370553, 966771985, 48582098, 122986111, 487988362, 931650312, 702210444, 879093010, 312710234, 48974780, 774551710, 347109253, 950341348, 205185042, 287849186, 39019466, 616462765, 30214554, 545417804, 979936662, 386676980, 247744485, 572911162, 306576046, 788533994, 220487288, 941147516, 356045196, 674793382, 748446637, 842289719, 323817405, 16817271, 611073721, 570446063, 569410784, 544261297, 255279255, 935132703, 382356226, 970612213, 21175274, 496180008, 88389091, 623142335, 802516155, 421908166, 278307114, 784266315, 896470811, 678097084, 77074702, 373279118, 533532540, 895814239, 296096562, 63745552, 994587625, 588904109, 172479603, 348031286, 885906983, 493029156, 89165539, 176233884, 409844860, 637449051, 333299498, 768447134, 441873231, 454035315, 241385970, 875812025, 87366364, 93801207, 926644594, 43076852, 741422663, 632118308, 835755768, 373254846, 805514232, 500439401, 330232931, 473508514, 226157381, 946488481, 327976374, 683982883, 432369257, 421674265, 490688863, 239080414, 494075456, 802131092, 563155259, 258406122, 172799961, 917775311, 529179855, 210448192, 928104530, 147819116, 94647624, 410762552, 671405581, 877976771, 240455918, 253373548, 522704235, 723976221, 733302175, 116109945, 19637777, 442824975, 96172318, 10718867, 208211606, 790905588, 806064200, 827636482, 777741819, 865561200, 347871925, 130636619, 72633964, 380810253, 479289990, 922487825, 626946451, 180286406, 764580823, 280603226, 553967269, 104242001, 241230646, 739871439, 36824573, 442866653, 227007367, 907452961, 592188481, 379890035, 923114094, 791977671, 499973504, 814803728, 485704660, 141710016, 288290174, 283524038, 43033439, 595405813, 37168877, 589855168, 528335034, 204396919, 94539416, 942073971, 938026729, 520561761, 560674568, 811334739, 882567249, 79112262, 430673108, 365774400, 270664258, 86464014, 867934259, 110536147, 904241636, 427500227, 514508341, 905383291, 236940363, 479581316, 185609169, 387898817, 354862226, 968964490, 78632614, 35529102, 594628232, 519054270, 103878440, 705605174, 245220519, 590973835, 791455459, 838337936, 625099599, 920664670, 162704341, 57593166, 239832458, 834493977, 900892686, 697540291, 314868704, 366144662, 681499693, 697613716, 237534593, 870699985, 546003010, 670466493, 433551230, 367930174, 420668720, 352604599, 665051697, 391885854, 411263560, 864899768, 904046617, 493285194, 517245210, 192913309, 156376456, 847854478, 848198594, 494167218, 527586979, 528504379, 464139745, 260361655, 264063424, 476811013, 747128270, 972731057, 301756906, 578703366, 505150317, 695727676, 710314239, 822113749, 167039644, 545484835, 257040411, 517882044, 851489909, 370785524, 574384114, 863395107, 261711234, 391307012, 107581623, 598948709, 125582268, 318702849, 980904335, 671752467, 871505517, 352896089, 814794954, 339954196, 577597152, 514986244, 259861449, 714027384, 719235570, 317251850, 815298702, 97141174, 81903281, 805923825, 609892584, 751917674, 439054310, 610005325, 864291188, 254918934, 268858329, 780698606, 345467388, 812954336, 396028692, 58389931, 111839482, 724030047, 526269638, 586312175, 429178242, 807535920, 998873786, 490647348, 89490827, 77845891, 185060015, 385874985, 11926516, 463264440, 574217500, 894154836, 225450847, 667339718, 77329433, 86555626, 405561204, 710532140, 143906198, 646119701, 23078876, 518579255, 616150112, 860283647, 392368136, 359841802, 168026065, 110217292, 621595429, 102254611, 439851458, 361862177, 234928486, 197444144, 202652660, 350709836, 304124837, 445940764, 786830721, 727514013, 400865321, 202475154, 414325696, 856980328, 128512539, 668428178, 523751122, 334456084, 282884562, 650406188, 5072625, 570055552, 721807377, 526510471, 10229195, 200602522, 424733036, 852602383, 95486344, 539998681, 736000841, 947736856, 589781150, 741133505, 856936549, 665875304, 632102591, 445629877, 733509763, 562377347, 12578716, 548751830, 999413167, 183083543, 530392903, 347345969, 663469519, 450662246, 129362998, 865098655, 161541607, 873870576, 280501080, 460804753, 459724262, 486226227, 16775019, 871305867, 836319096, 323420661, 613562603, 552283796, 971190782, 880518955, 418704673, 595098706, 685138699, 665142652, 614360568, 683700049, 80077123, 597898962, 590979250, 451292779, 381746726, 683042086, 461080822, 507666822, 92355836, 707050664, 50607555, 173528180, 408461429, 746058530, 277291648, 534010363, 807805606, 606322942, 340529841, 298165812, 541268914, 857255569, 813124655, 995888252, 57159888, 469237917, 159396291, 669857344, 607701194, 865742372, 421500174, 150347077, 951860197, 884247232, 702110941, 352891026, 653403527, 196135072, 862416020, 349949436, 779336735, 773147846, 27955276, 720542254, 934645479, 252076046, 775947269, 732639566, 485241369, 793155833, 736371240, 356639172, 307754274, 948247664, 237198843, 365531007, 302139343, 224682046, 936115224, 250499986, 944343157, 890864899, 75679787, 149996022, 886905582, 108471515, 5461289, 721242611, 128324569, 579846484, 690967938, 666532109, 712711327, 195340639, 446508471, 227286840, 608235770, 455704186, 433856293, 289441943, 977952516, 215972761, 771227711, 378715571, 783355341, 470648232, 257107377, 683672883, 474540658, 524322079, 408862760, 30095612, 37551478, 60028604, 576324136, 287312254, 891810398, 460411444, 112828199, 78248191, 718988491, 326571102, 239571595, 804758195, 487143916, 888149225, 929664020, 544084442, 183637698, 602671082, 436815075, 311321544, 286955689, 774928590, 858512313, 10938589, 729892002, 551360134, 69453435, 47012987, 102302649, 421935557, 420139105, 892611761, 577445746, 718145816, 117973248, 818739790, 648091049, 613601157, 211175818, 524807043, 809488605, 880929695, 608162463, 873067829, 920912817, 140643899, 80279343, 834032255, 320892022, 674114052, 341334473, 312882517, 952313922, 507511174, 939294799, 338503653, 885601705, 787082345, 298642489, 260704793, 738146075, 719168954, 142655362, 318261049, 786692826, 699581797, 719252530, 38417838, 125316287, 421911177, 518496481, 551242918, 51926469, 246764866, 215583461, 661516366, 862693989, 104447271, 559450932, 291637258, 155007814, 379702615, 743872049, 455916142, 959871149, 332188462, 32700333, 652713059, 582769069, 485807506, 878792327, 545759714, 765149254, 770441097, 568124553, 418761662, 867062826, 833899224, 941066237, 433921749, 674991005]';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};




// LISTA DE VALORES 2
// ******************

Blockly.Blocks['lista_numeros_2'] = {
    init: function() {
        this.setHelpUrl(null);
        this.setColour(210);
        this.appendDummyInput()
            .appendField("Outra lista de valores");
        this.setOutput(true, "Array");
        this.setTooltip('');
    }
};

Blockly.JavaScript['lista_numeros_2'] = function(block) {
    var code = '[355, 726, 905, 214, 613, 585, 206, 315, 861, 346, 219, 971, 606, 355, 287, 178, 958, 105, 200, 949, 817, 585, 998, 107, 923, 229, 215, 828, 650, 591, 871, 547, 254, 254, 313, 840, 558, 582, 502, 742, 553, 994, 904, 363, 533, 885, 788, 934, 807, 446, 235, 866, 983, 17, 19, 393, 799, 545, 606, 692, 441, 164, 751, 806, 578, 912, 508, 985, 487, 721, 260, 352, 314, 444, 711, 635, 273, 589, 404, 921, 163, 237, 459, 520, 832, 976, 976, 184, 900, 194, 536, 973, 527, 337, 476, 275, 316, 62, 511, 332, 140, 317, 245, 413, 350, 772, 34, 894, 438, 865, 523, 48, 839, 692, 285, 562, 846, 419, 313, 852, 317, 459, 441, 404, 472, 500, 570, 902, 119, 590, 477, 966, 169, 512, 115, 793, 665, 991, 333, 521, 208, 419, 38, 376, 807, 845, 237, 580, 590, 981, 290, 865, 206, 49, 436, 292, 480, 127, 661, 75, 848, 339, 180, 962, 321, 844, 364, 728, 702, 848, 717, 368, 930, 448, 751, 771, 77, 167, 231, 283, 580, 492, 392, 771, 756, 974, 239, 994, 842, 455, 122, 118, 530, 473, 477, 564, 210, 765, 419, 310, 257, 763, 870, 70, 50, 316, 532, 407, 191, 235, 590, 475, 804, 50, 237, 182, 914, 0, 195, 97, 388, 808, 660, 467, 601, 101, 511, 770, 990, 25, 276, 759, 375, 373, 724, 39, 354, 691, 216, 550, 193, 415, 215, 943, 618, 300, 623, 30, 308, 146, 7, 622, 160, 53, 166, 830, 194, 282, 532, 734, 218, 986, 836, 487, 332, 969, 306, 88, 720, 536, 255, 774, 102, 414, 893, 251, 714, 661, 545, 175, 759, 873, 445, 412, 692, 588, 207, 899, 72, 652, 809, 588, 563, 302, 637, 522, 362, 11, 925, 805, 246, 968, 397, 401, 354, 260, 950, 388, 743, 363, 55, 413, 207, 968, 633, 472, 562, 815, 648, 934, 783, 375, 169, 137, 507, 630, 485, 909, 663, 423, 401, 81, 57, 447, 478, 909, 74, 94, 35, 910, 495, 840, 861, 413, 414, 707, 217, 677, 495, 915, 118, 955, 348, 304, 266, 256, 151, 177, 471, 522, 783, 554, 521, 41, 846, 1, 246, 141, 201, 207, 131, 756, 133, 809, 888, 585, 386, 774, 679, 24, 743, 627, 422, 454, 219, 226, 773, 526, 3, 698, 702, 214, 748, 327, 250, 952, 263, 490, 282, 956, 228, 251, 408, 803, 692, 186, 154, 478, 375, 158, 663, 773, 414, 749, 130, 67, 887, 378, 537, 511, 867, 788, 857, 613, 829, 522, 103, 707, 225, 733, 909, 992, 774, 806, 119, 86, 473, 735, 97, 328, 192, 806, 207, 15, 88, 347, 376, 471, 892, 874, 256, 678, 778, 348, 713, 716, 379, 672, 685, 341, 951, 383, 75, 76, 251, 949, 459, 410, 857, 859, 671, 908, 409, 738, 633, 194, 561, 210, 115, 12, 238, 928, 455, 319, 574, 214, 235, 669, 380, 252, 280, 899, 623, 828, 224, 235, 424, 643, 473, 738, 366, 476, 434, 644, 919, 198, 105, 587, 637, 790, 463, 607, 858, 167, 881, 999, 378, 725, 860, 869, 244, 82, 715, 152, 772, 968, 672, 67, 56, 372, 269, 859, 693, 844, 814, 446, 973, 39, 861, 902, 863, 786, 336, 92, 300, 92, 427, 706, 201, 463, 566, 321, 534, 78, 340, 721, 993, 782, 87, 343, 456, 413, 402, 184, 26, 847, 821, 220, 400, 312, 559, 486, 741, 340, 163, 192, 887, 449, 353, 643, 521, 454, 103, 827, 734, 157, 692, 881, 340, 123, 826, 91, 51, 473, 630, 230, 632, 107, 324, 324, 779, 685, 19, 784, 929, 694, 899, 405, 863, 876, 862, 910, 372, 719, 162, 449, 41, 490, 162, 181, 975, 243, 19, 803, 269, 436, 530, 713, 861, 538, 632, 944, 258, 603, 319, 975, 745, 581, 931, 104, 120, 273, 984, 881, 311, 230, 779, 381, 962, 729, 632, 153, 32, 602, 648, 467, 155, 530, 741, 603, 396, 337, 284, 526, 682, 197, 732, 159, 191, 316, 121, 902, 743, 330, 560, 573, 302, 446, 319, 749, 13, 247, 411, 776, 209, 948, 52, 79, 824, 24, 521, 579, 0, 468, 156, 552, 486, 775, 465, 910, 576, 81, 784, 169, 952, 613, 197, 449, 61, 788, 512, 580, 799, 86, 502, 630, 335, 308, 907, 979, 9, 625, 466, 131, 799, 871, 420, 596, 835, 61, 208, 478, 832, 94, 812, 535, 398, 917, 553, 534, 496, 812, 28, 45, 132, 300, 510, 208, 374, 863, 178, 315, 609, 649, 318, 183, 339, 173, 704, 372, 412, 420, 910, 75, 251, 440, 386, 586, 917, 703, 408, 747, 379, 434, 558, 662, 70, 405, 127, 674, 578, 9, 867, 387, 812, 725, 855, 613, 786, 772, 684, 542, 45, 71, 727, 50, 277, 731, 228, 792, 338, 101, 616, 194, 874, 266, 434, 34, 227, 35, 420, 911, 199, 950, 708, 711, 927, 192, 241, 566, 894, 878, 709, 741, 451, 754, 462, 190, 530, 10, 992, 683, 40, 477, 227, 951, 112, 127, 596, 92, 415, 796, 242, 779, 696, 553, 224, 963, 245, 278, 866, 96, 412, 767, 445, 245, 401, 922, 392, 516, 125, 963, 353, 257, 515, 898, 749, 79, 643, 134, 312, 826, 373, 828, 437, 124, 507, 127, 787, 403, 747, 747, 812, 295, 432, 349, 138, 273, 660, 82, 968, 367, 412, 8, 771, 581, 496, 177, 396, 445, 909, 427, 434, 615, 601, 861, 224, 763, 491, 885, 65, 475, 4, 772, 179, 926, 702, 802, 71, 703, 455, 374, 444, 460, 578, 590, 554, 730, 266, 341, 402, 678, 140, 786, 111, 703, 584, 997, 384, 703, 107, 620, 94, 775, 461, 236, 261, 82, 538, 259, 880, 754, 902, 650, 261, 943, 562, 409, 218, 118, 542, 970, 523, 462, 802, 519, 386, 221, 861, 615, 321, 617, 273, 899, 278, 307, 729, 967, 636, 166, 751, 964, 2, 918, 726, 379, 242, 587, 489, 12, 576, 964, 463, 204, 476, 888, 692, 589, 199, 999]';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};



// LISTA DE VALORES 3
// ******************

Blockly.Blocks['lista_numeros_3'] = {
    init: function() {
        this.setHelpUrl(null);
        this.setColour(210);
        this.appendDummyInput()
            .appendField("Lista de valores");
        this.setOutput(true, "Array");
        this.setTooltip('');
    }
};

Blockly.JavaScript['lista_numeros_3'] = function(block) {
    var code = '[355, 726, 905, 214, 613]';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};


// LISTA DE VALORES PARA FCUL RALLY PRO 2016
// ******************

Blockly.Blocks['lista_numeros_2016_1'] = {
    init: function() {
        this.setHelpUrl(null);
        this.setColour(210);
        this.appendDummyInput()
            .appendField("Lista de valores 1");
        this.setOutput(true, "Array");
        this.setTooltip('');
    }
};

Blockly.JavaScript['lista_numeros_2016_1'] = function(block) {
    var code = '[34854,18811,740,56333,15731,62616,55733,65234,49624,83976,5672,64856,44548,32192,88638,40888,9364,15810,41944,12218,59943,84746,26769,61258,77824,19005,47497,30408,79377,71468,68640,29250,85616,29543,82667,96546,65355,11837,95040,27318,93057,6021,34849,55742,34567,90370,16747,85495,37473,93763,95481,65244,62695,9062,50520,91247,46311,88379,5754,64933,6455,8711,32325,20277,26663,39991,11692,69731,7478,80760,88382,97324,12189,77460,74825,70480,32238,74974,81806,89035,28994,80264,61840,79311,91567,33425,12705,76332,95146,51481,71003,38794,43745,72521,59728,48293,13604,79646,44440,72569,61713,67945,10519,15568,47220,35672,99282,64110,6998,51384,33063,10414,34538,9248,44034,72908,86067,77797,6321,44212,5608,30933,758,29288,95412,5180,82556,68400,60467,76353,23041,90329,29223,89358,75267,71652,49986,81127,88454,86564,62857,46060,16814,10691,5093,20767,25652,4333,4109,36002,4158,80581,78778,92330,38951,77752,81286,35859,79519,464,90173,10826,73804,68040,81285,227,19404,75734,24708,96195,27259,77677,24562,38579,37590,3481,68733,64688,83570,39876,12971,28227,85088,4510,93218,10363,15749,12539,42452,24949,4081,72174,64171,98065,77560,73384,50931,60922,1134,99444]';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};

Blockly.Blocks['lista_numeros_2016_2'] = {
    init: function() {
        this.setHelpUrl(null);
        this.setColour(210);
        this.appendDummyInput()
            .appendField("Lista de valores 2");
        this.setOutput(true, "Array");
        this.setTooltip('');
    }
};

Blockly.JavaScript['lista_numeros_2016_2'] = function(block) {
    var code = '[79881,45430,49698,36909,90128,59406,27428,65234,25615,10114,5672,97320,88433,78289,88760,21310,51276,53565,81922,12218,59943,24629,12204,61258,96388,55166,53110,71232,27246,2505,68640,29250,7790,80492,81901,50829,47732,11837,45709,51790,80486,99525,32823,34128,20535,90370,18800,48524,37473,81597,69969,11180,62695,48417,32247,47367,46311,5157,46597,20930,95456,54208,29019,57012,19669,39991,6010,72553,5821,32722,96817,41958,33611,17475,49395,55708,32238,80577,34373,97946,47486,80264,22419,79311,95506,77946,31491,16703,82546,29927,15855,20048,66282,58788,59728,48293,13604,83766,71398,67757,91093,77321,96645,64440,38492,98091,7685,7458,6998,51384,79941,52791,76881,9248,23256,35179,87311,77797,6321,40822,5608,30933,917,56421,27023,20206,48107,68400,77983,35753,23041,44536,29223,89358,20255,71652,2669,81127,88367,86564,62857,46060,49634,58153,22619,29036,2651,89110,91493,36002,4158,91103,36992,18146,70393,81729,81286,18678,91013,12552,713,10826,83378,68040,97624,27904,17704,59346,48022,4494,27259,83411,69907,552,37590,61987,68733,56163,83570,30296,12971,86830,85088,96105,93218,95767,40294,66506,65429,24949,4081,72174,34608,29978,81347,92215,32176,31249,13424,72358]';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};
// LISTA DE NÚMEROS POSITIVOS E NEGATIVOS
// **************************************

Blockly.Blocks['lista_numeros_Z'] = {
    init: function() {
        this.setHelpUrl(null);
        this.setColour(210);
        this.appendDummyInput()
            .appendField("lista de números");
        this.setOutput(true, "Array");
        this.setTooltip('Lista com números positivos e negativos');
    }
};

Blockly.JavaScript['lista_numeros_Z'] = function(block) {
    var code = '[93, 171, 201, -183, -245, 67, 33, 143, 77, -27, -121, 39, -68796, -115, 17, 255, 189, -75, -233, 87, -213, 99, 1, 239, -237, 251, 153, -718932, -69, -756708, 113, 159, 221, -235, -73, -204948, 245, 67, 225, 143, -560028, -219, -249, -231, 37, -65124, 145, 127, 125, 11, 233, -23, 85, -99, -65, 175, 109, 187, 25, 7, 69, 211, -684876, -159, -29, -356868, -9, 247, -53, 195, 161, 143, 13, -91, -57, 167, -37, 115, -17, -127, -428508, -75, -172524, 151, -213, -613284, -1, 111, 173, 59, 89, -71, -69, 147, 241, 159, 221, 43, -9, 119, 53, -43044, 97, -79, 141, 91, 249, -337620, -165, 51, 209, -63, 189, 75, -233, 215, 213, -740004, -129, 239, 45, 59, 89, -135, 197, 211, -197196, 159, 221, 107, 201, 119, 53, 195, 225, -647604, -13, 27, -121, 103, 165, -18276, -209, 255, -61, 139, 41, -511764, 85, 227, 1, 239, -109, -251, 217, 135, 5, 19, 49, -223, -703836, 171, 137, 119, -245, 67, 33, -143, 13, 91, 249, 103, 37, 115, 209, -255, 253, 75, -233, -151, 21, 227, -1, -111, 45, -618948, 89, 71, 69, 19, 177, 159, -29, -171, 9, 55, 53, 195, 97, 207, 13, 27, -249, 103, -740028, -115, -299724, -628212, 253, 139, -169, 87, 149, -227, -193, 175, 173, 59, -378924, -526164, 133, 19, -177, 31, -157, -639492, -201, 247, 245, -3, 97, 207, -93852, -217668, 121, 103, 229, 179, 145, 255, 253, 75, 41, 215, -213, 227, -219660, -47, 173, 251, -217, 135, -133, 147, -100428, -95, 221, -107, 73, 183, 245, -67, 97, 207, 77, 155, 57, 167, 101, 115, -209, -63, 253, 139, -169, 23, -21, -99, -605196, -175, -740892, -123, -153, -135, 5, -260580, -49, -159, -157, 43, -201, 247, -117, 195, 161, 143, -205, -107076, -249, 167, -229, 179, 17, 191, -189, -232068, 233, 151, 149, -48804, 1, -47, 173, 187, 25, 199, 69, 147, -396108, 95, 157, 235, 201, 183, -595836, -3, -161, -79, 13, 27, 249, 39, 165, -51, 17, 191, -125, -462468, -105, 87, 85, 99, 129, -239, -282396, 187, -89, -7, -197, -211, -113, 223, 29, 107, 73, 247, -181, 67, 33, 79, -141, 91, -185, -167, -229, -115, 209, 191, 125, 11, 105, 23, 85, 227, -65, 111, 109, -187, -153, 199, 197, 19, -241, -95, -29, -141828, 9, 119, 53, 131, -225, 207, 77, 219, 249, 103, 37, 179, 17, 191, 253, 75, 169, 215, -149, 227, 193, -47, 45, -187, 89, 135, 69, -147, 113, 95, -138588, 235, 137, -769428, 245, 131, 225, -15, 141, 27, 249, -724692, -229, -51, 145, 255, 189, -475524, 233, -23, -21, -99, 193, 239, 45, 187, -25, 7, 69, 83, 49, 95, -114780, 171, 137, 183, -117, -131, 33, -79, 13, 27, -57, -103, 101, 115, -203724, -292596, 189, 203, 169, 23, -85, 227, -129, 111, 45, 59, 217, 71, 197, -83, 49, 223, 93, -43, 9, 247, -245, 195, -97, 143, -77, 155, 57, 167, 37, 243, -209, -127, 253, 139, -468972, 151, 85, 99, -193, 239, 237, 187, 25, -7, 197, 83, -177, 223, 93, 43, -73, 183, 117, 67, 33, 15, 205, 155, -127404, 39, 101, 243, 145, -424692, 125, -11, -233, 23, -70908, 35, 129, 47, 109, -251, -676908, 135, 197, 211, 241, 31, 221, 171, 201, 183, 245, 67, -225, 207, 205, -155, 249, 167, -54972, -243, 145, -255, -691932, -453252, 233, 151, -149, -227, -1, 239, 45, -28356, 153, 199, 197, 83, 241, -95, 157, 235, -137, -55, -245, -3, -161, 15, 77, 155, 121, 39, -229, 51, -209, -337140, 61, -203, 169, 151, 213, 163, 193, -175, 173, 123, 217, -135, -69, -768228, 49, 159, 29, -43, 137, -183, -599676, 131, 161, -79, 77, 155, 249, 103, 101, -243, 209, -127, -189, 203, -105, 23, -85, 35, 193, 47, 45, 59, 153, -56148, -69, 147, -49, -159, -157, 43, 201, 119, 53, -195, -33, 15, 13, -155, 249, 231, -101, -243, 81, -63, 125, -47748, -169, 87, -290556, 163, 193, -111, -109, 251, 217, 7, 133, -147, 241, -223, 221, 171, 201, 119, 117, 3, -97, -15, -205, -155, 121, 39, -101, 115, 17, 63, -189, 11, 41, 215, 149, 35, -428556, -454452, -641820, 123, -25, -199, 69, 83, -241, 159, -221, 171, 73, 119, -181, 195, 33, -207, 205, 219, 121, -39, 229, 179, 81, 191, -300252, -11, -147948, 151, 21, -163, 129, 239, 173, 187, -89, 71, -133, 19, -270924, 159, -157, -167940, 201, -247, -181, 131, -97, -15, -543132, -219, 57, -231, 165, 51, 145, 255, 253, -139, 41, -215, -85, 99, -1, 175, -173, 123, 153, -199, 69, 19, 177, -95, -157, -235, -73, 183, -53, 3, 161, 15, -90780, -91, -57, 103, -37, 115, -471756, 63, -189, -11, -169, 23, 85, -622500, 1, 239, -45, -251, -217, 7, 5, 147, -241, -238452, 157, 171, -137, 247, 181, -67, -153228, 143, 141, 91, -3756, 39, 37, -51, -145, 127, -61, 139, 105, 215, 213, 99, 193, -743220, 237, 187, 153, 71, -133, -10212, 113, 159, -191580, 171, 137, -183, -53, 67, -33, 207, -77, -155, 57, -242388, 37, -568164, -145, -727284, 253, 11, 41, 23, 21, 35, 193, 111, 45, -187, -296748, -746580, -5, 83, -113, 159, -93, 171, -201, -55, -245, -3, 161, 143, 205, 91, 121, -231, 229, -243, -17, 255, 253, 203, 105, -23, -21, -214692, 1, -47, 173, -123, 25, -199, -197, -83, 177, -329076, 93, 43, 201, -179604, -245, 195, 161, -143, 77, 219, -249, 103, -165, -115, 145, 255, 189, -203, -41, 151, 21, 35, -193, 175, -109, 251, 25, 199, -342588, 211, -177, 95, -221, 235, -9, 119, -117, 131, 161, 79, 13, 27, -185, -103, -37, 243, -145, 191, -253, 203, -105, -507924, -213, -163, -193, 175, -173, -137412, -153, 199, 69, -83, -113, -159, 221, 171, 201, 119, 53, 3, 225, -79, -459420, 27, 249, 167, -101, 179, 17, 127, -61, 139, 105, 23, 213, -163, 65, -175, -173, 251, -33324, -199, -69, 83, 177, 95, -29, 43, -627564, 55, -181, 131, -233868, 15, 2499, -329990]';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};


// LISTA CAPICUA PINO
// ******************

Blockly.Blocks['lista_capicua_pino'] = {
    init: function() {
        this.setHelpUrl(null);
        this.setColour(120);
        this.appendDummyInput()
            .appendField("Lista de números");
        this.setOutput(true, "Array");
        this.setTooltip('');
    }
};

Blockly.JavaScript['lista_capicua_pino'] = function(block) {
  var code = '[145245, 94379, 5833, 8228, 50005, 65996659, 195828, 8888888, 180111081, 44, 66, 909, 13131, 44880, 88, 80222208, 134328, 502808205, 170777, 198151, 0, 7776, 173270, 88, 5, 164820, 69, 87439, 189453, 85911658, 182134, 1, 0, 11, 259858652, 119328, 0, 195293, 0, 525, 67937, 16088091, 71552, 166966, 46140, 2552, 61667, 11, 5560955, 49567, 56541, 562202295, 551808155, 1910161, 133044, 958916856, 102279, 165893, 62227, 200241, 0, 26192, 163873, 25152, 28582, 5, 891282168, 6061909, 0, 0, 920026, 89397, 668505899, 230426, 5440, 13494, 110588, 66322, 692609269, 1851, 228185, 174919, 43653, 0, 55, 69, 0, 83675, 104569, 220263, 157157, 177331, 93585, 72959, 196093, 2692, 161866, 0, 2692, 69790, 55055, 9116, 890101068, 555, 52762, 280858082, 0, 0, 895080568, 191254, 69, 9696, 66310, 204684, 8738, 816689918, 215947, 207081, 5, 23362, 609, 108101, 87955, 33009, 58463, 115357, 209602, 216518, 8, 184603, 31737, 29500562, 52526, 163060, 5, 8008, 170344, 169906691, 147485, 19561, 289515682, 916, 555202555, 105045, 195299, 5, 15988651, 208427, 197641, 169335, 9116, 59811865, 69649, 228543, 1277, 38731, 75945, 202199, 686956989, 0, 8, 151584, 0, 101, 69, 11, 689, 956, 78262, 212, 70121, 818, 72614, 105388, 129282, 18055081, 140637, 124331, 44425, 232119, 8558, 25676, 5050505, 220991, 50365, 69579, 108713, 89168, 8052508, 0, 525, 525, 220496, 5965, 65849, 986, 78076, 44370, 4664, 91438, 11, 55, 0, 112153, 591858165, 802609208, 610282019, 8, 660111099, 55, 163805, 207019, 206793, 226487, 87541, 0, 96966, 122060, 891168, 0, 8, 103307, 6121, 72855, 8888, 89388, 2, 88936, 39390, 0, 555555, 19900661, 19900661, 888, 83619, 148673, 252, 119592, 190046, 231460, 19898, 9226, 80655908, 115212, 0, 85351, 100965, 1868981, 115246, 221940, 115274, 83248, 120102, 1, 6009, 926515926, 28969682, 96, 182503, 91816, 585, 55, 164588, 94402, 58536, 120350, 958050856, 47479, 201333, 210947, 99911666, 151066, 54720, 859555658, 31381, 90915, 101249, 168943, 184557, 96, 137956, 556151955, 95556, 174526, 8, 118865, 25279, 156093, 618212819, 65388, 39362, 10522501, 90783, 0, 36248, 177742, 9006, 5, 65696959, 196858961, 620029, 77745, 992266, 9860986, 15055051, 2665992, 162305, 5359, 0, 151838, 129892, 159546, 174560, 22294, 111708, 117362, 171736, 113550, 808, 102543, 0, 69, 98155186, 916, 193007, 2, 123112, 0, 15985, 658916859, 163600, 122694, 188108, 233122, 0, 139045, 178419, 611119, 629, 115905, 190319, 45613, 0, 2, 8, 528525825, 88, 11569511, 114433, 9226, 55, 1, 45144, 3278, 266020992, 146139, 8, 5, 98237, 96, 101556, 81290, 187504, 25638, 177452, 127426, 6559, 62419, 6229, 141006, 229460, 61588519, 0, 11, 10801, 210378, 164912, 55846, 609, 199525661, 69011069, 103821, 165591, 0, 6969, 91016, 0, 5555, 183369, 145463, 50269205, 111888111, 155505551, 22, 626050929, 83534, 25252, 1280821, 125568, 58022085, 146177, 110191, 6990669, 56195, 2121212, 66199, 8, 204854, 8, 172939, 20073, 18569581, 160488, 0, 69, 6492, 101426, 158680, 688050889, 184795, 147129, 60263, 5, 22896822, 8, 8, 125231, 118765, 120699, 0, 33764, 84538, 98611986, 120373, 689222689, 9886, 113341, 126795, 659, 97968, 24422, 916, 64281, 190535, 626555929, 0, 121, 86198, 92688926, 67758, 956, 50241, 150575, 2, 220080022, 906609906, 525, 99001, 139815, 60655909, 1, 168021, 19235, 100609, 96, 1, 52511525, 55, 98122186, 0, 114099, 38033, 950916056, 50005, 55, 228282822, 55605, 108419, 0, 602505209, 2121212, 97866, 196400, 122111221, 602926209, 5780, 11, 88027, 5225, 1000001, 3235, 204609, 80303, 919616, 46944, 85955658, 23605, 83139, 93473, 161167, 176781, 96, 130180, 555555, 15895, 95556, 166750, 8, 111089, 17503, 148317, 618202819, 57612, 31586, 10522501, 916, 18996681, 685121589, 615525519, 65159, 1528251, 199849, 96663, 56597, 16022091, 45918, 0, 160403, 0, 4828, 1000001, 232627, 9226, 36984, 1961, 9556, 0, 184817, 8, 55, 201207, 135221, 551888155, 37568, 37942, 526956925, 69, 80322, 105501, 94793, 1, 102956201, 119865, 4199, 919121616, 525282525, 2962, 0, 163103, 18397, 8968, 605926509, 80208, 0, 858, 162608, 70822, 500585005, 87217, 181555181, 5291625, 2425, 0, 5815185, 22, 172042, 96, 71021, 88, 119000611, 69, 26090, 138064, 0, 0, 6699, 66301, 906, 27380, 111, 0, 0, 8, 195414, 36188, 141682, 13656, 22, 76675, 18849, 65059, 173558, 119932, 0, 86697, 596689965, 98200286, 69, 95111156, 0, 8, 68889, 21822812, 681609189, 96, 288882, 6699, 86500598, 124916, 8, 202, 0, 956619956, 125592, 619, 21571, 27105, 0, 126010921, 97297, 48831, 3005, 144139, 207273, 48407, 136981, 96, 291505162, 102547, 6889, 0, 23925, 197699, 8652598, 58088085, 16469, 15551, 142082, 98536, 0, 121009, 0, 196942, 99156, 0, 2, 5115, 189605, 82600928, 10969601, 619, 142240, 115734, 205926502, 0, 5115, 0, 220598, 629, 0, 154096, 9510, 49004, 145858, 881619188, 11039, 73693, 92907, 132041, 0, 2, 191631, 55, 22, 520659025, 1221, 926, 6082809, 21511512, 55555, 5885, 0, 114711, 9202026, 609, 35679, 2, 0, 0, 122410, 215101512, 20711, 5, 0, 223849, 57303, 55, 73384, 23838, 0, 668505899, 226538, 1552, 9606, 106700, 62434, 208008, 92500526, 9696, 8, 88288, 39072, 86486, 44380, 19188161, 30669, 51803, 619, 69564, 69, 90851, 218305, 224559, 585, 20102, 154167, 82228, 196620, 600009, 9556, 98534, 1292621, 5915165, 4500, 9158516, 215655, 187109, 215923, 192657, 8558, 155500, 153474, 24488, 51815, 66822899, 195084, 71138, 808, 51237, 49331, 225745, 2, 25196152, 126511, 110445, 0, 55600955, 207305, 69596569, 1, 184121, 53095, 77349, 112883, 221619122, 68724, 178058, 25072, 11900611, 55507, 127281, 2, 83186, 55, 27553, 899668, 222460, 0, 94185, 200279, 199573, 164067, 509986605, 176548, 206202, 22269222, 0, 26522592, 91500516, 10100101, 56571, 22822, 0, 145525, 107139, 181, 225086, 921121126, 174987, 6761, 18281, 66536, 184990, 0, 158129, 22155122, 2, 120913, 11967, 9341, 55, 18314, 130288, 5, 0, 662020299, 194421, 0, 122246, 74380, 956, 164263, 171237, 562202295, 188532, 99146, 188080, 138534, 21000012, 68522589, 93008, 231622, 296926962, 116479, 146493, 961252196, 33346, 22, 926, 0, 1, 95069056, 5, 21512, 83817, 34391, 111445, 252, 5592655, 131717, 22, 86898, 142147, 6288829, 99266, 0, 225906522, 148865, 910080016, 93050, 23584, 196961, 151, 76044, 145058, 0, 5, 196982, 11611911, 204707, 0, 659659, 669020699, 204108, 129122, 7816, 0, 163941, 8, 6622299, 10241, 555, 233054, 69, 33631, 43485, 11, 181, 255986552, 2962, 203069, 8, 69, 75713, 109601, 53916, 22, 20911602, 5661995, 57343, 552202255, 661808199, 19955661, 230804, 232618, 0, 592265, 22022, 69, 106598, 1132, 223746, 34280, 22822, 48113, 88, 602505209, 113081, 6969, 212562, 77816, 1, 88888, 114408, 2962, 180573, 6862989, 185222581, 160849, 218943, 18288281, 6559, 860659098, 8, 202, 207944, 23998, 202692, 9922266, 2112, 52592, 202726, 76140, 126010921, 1, 79836, 91250, 108184, 80208, 191631, 55, 22, 520659025, 1221, 926, 6082809, 21511512, 55555, 5885, 0, 114711, 9202026, 609, 35679, 2, 0, 0, 122410, 215101512, 20711, 5, 0, 223849, 57303, 55, 73384, 23838, 0, 668505899, 226538, 1552, 9606, 106700, 62434, 208008, 92500526, 9696, 8, 88288, 39072, 86486, 44380, 19188161, 30669]';
  return [code, Blockly.JavaScript.ORDER_ATOMIC];
};



// LISTA TAMANHO PLANTEL
// *********************

Blockly.Blocks['lista_tamanho_plantel'] = {
    init: function() {
        this.setHelpUrl(null);
        this.setColour(90);
        this.appendDummyInput()
            .appendField("Lista de inscritos por clube");
        this.setOutput(true, "Array");
        this.setTooltip('Lista com o número de jogadores por clube');
    }
};

Blockly.JavaScript['lista_tamanho_plantel'] = function(block) {
    var code = '[45, 39, 38, 37, 38, 37, 34, 35, 34, 35, 34, 36, 30, 35, 33, 32, 31, 29]';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};



// LISTA DE IDADES MÉDIAS
// **********************

Blockly.Blocks['lista_idade_media'] = {
    init: function() {
        this.setHelpUrl(null);
        this.setColour(90);
        this.appendDummyInput()
            .appendField("Lista de idades médias dos jogadores por clube");
        this.setOutput(true, "Array");
        this.setTooltip('Lista com as idades médias dos jogadores por clube');
    }
};

Blockly.JavaScript['lista_idade_media'] = function(block) {
    var code = '[23.62, 26, 25.53, 25.32, 24.16, 23.68, 25.71, 24.89, 25.53, 24.8, 25.38, 23.33, 27.53, 23.37, 24.61, 25.09, 25.29, 25.62]';
    return [code, Blockly.JavaScript.ORDER_ATOMIC];
};


// LISTA PEQUENA
// *************

Blockly.Blocks ['lists_retsmalllist'] = {
    category: 'Lists',
    init: function() {
        this.setHelpUrl (null);
        this.setColour (90);
        this.appendDummyInput().appendTitle ('Lista de valores');
        this.setOutput (true, 'Array');
        this.setTooltip ('Devolve a lista de valores.');
    }
};

Blockly.JavaScript ['lists_retsmalllist'] = function (block) {
    var code = '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]';
    return [code, Blockly.JavaScript.ORDER_NONE]
};


// INSTRUÇÕES CONTROLO
// *******************

Blockly.Blocks ['controls_para_cada'] = {
    category: 'Lists',
    helpUrl: null,
    init: function() {
        this.setColour(120);
        this.appendValueInput("list")
            .setCheck("Array")
            .appendTitle("Para cada elemento da lista");
        this.appendStatementInput("dolist")
            .setCheck("null")
            .appendTitle("fazer");
        this.setInputsInline(true);
        this.setPreviousStatement(true, "null");
        this.setNextStatement(true, "null");
        this.setTooltip('Executa as instruções internas para cada elemento da lista dada.');
    }
};

Blockly.JavaScript ['controls_para_cada'] = function(block) {
    var value_list = Blockly.JavaScript.valueToCode(this, 'list', Blockly.JavaScript.ORDER_ATOMIC);
    var statements_dolist = Blockly.JavaScript.statementToCode(this, 'dolist');
    var code = 'var elemento; var lista = '+value_list+
        '; for (var elemento_index in lista) { elemento = lista[elemento_index];'+statements_dolist+'}';
    return code;
};


Blockly.Blocks ['basic_retelemento'] = {
    category: 'Basic',
    helpUrl: null,
    init: function() {
        this.setColour(120);
        this.appendDummyInput('valor').appendTitle('elemento da lista');
        this.setOutput(true, 'Number');
        this.setTooltip('Devolve o valor do elemento corrente da lista.');
    }
};

Blockly.JavaScript ['basic_retelemento'] = function(block) {
    return ['elemento', Blockly.JavaScript.ORDER_ATOMIC];
};
